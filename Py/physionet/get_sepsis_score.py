#!/usr/bin/env python

import numpy as np
import pandas as pd
from numpy import loadtxt
from xgboost import XGBClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import pickle
import random

def get_sepsis_score(data, load_model):
    x_mean = np.array([
        83.8996, 97.0520,  36.8055,  126.2240, 86.2907,
        66.2070, 18.7280,  33.7373,  -3.1923,  22.5352,
        0.4597,  7.3889,   39.5049,  96.8883,  103.4265,
        22.4952, 87.5214,  7.7210,   106.1982, 1.5961,
        0.6943,  131.5327, 2.0262,   2.0509,   3.5130,
        4.0541,  1.3423,   5.2734,   32.1134,  10.5383,
        38.9974, 10.5585,  286.5404, 198.6777])
    x_std = np.array([
        17.6494, 3.0163,  0.6895,   24.2988, 16.6459,
        14.0771, 4.7035,  11.0158,  3.7845,  3.1567,
        6.2684,  0.0710,  9.1087,   3.3971,  430.3638,
        19.0690, 81.7152, 2.3992,   4.9761,  2.0648,
        1.9926,  45.4816, 1.6008,   0.3793,  1.3092,
        0.5844,  2.5511,  20.4142,  6.4362,  2.2302,
        29.8928, 7.0606,  137.3886, 96.8997])
    c_mean = np.array([60.8711, 0.5435, 0.0615, 0.0727, -59.6769, 28.4551])
    c_std = np.array([16.1887, 0.4981, 0.7968, 0.8029, 160.8846, 29.5367])

    #x = data[-1, 0:34]
    #c = data[-1, 34:40]

    dt = pickle.load(open('Vars.dat', 'rb'))
    x = data[-1,0:40]
    x[0]=(x[0]-0)/(280-0)
    x[1]=(x[1]-0)/(100-0)
    x[2]=(x[2]-0)/(50-0)
    x[3]=(x[3]-0)/(300-0)
    x[4]=(x[4]-0)/(300-0)
    x[5]=(x[5]-0)/(300-0)
    x[6]=(x[6]-0)/(100-0)
    x[7]=(x[7]-0)/(100-0)
    x[8]=(x[8]-(-40))/(100-(-40))
    x[9]=(x[9]-(-10))/(55-(-10))
    x[10]=(x[10]-(-100))/(4000-(-100))
    x[11]=(x[11]-0)/(7.9300-0)
    x[12]=(x[12]-0)/(100-0)
    x[13]=(x[13]-0)/(100-0)
    x[14]=(x[14]-0)/(9961-0)
    x[15]=(x[15]-0)/(268-0)
    x[16]=(x[16]-0)/(3833-0)
    x[17]=(x[17]-0)/(27.9000-0)
    x[18]=(x[18]-0)/(145-0)
    x[19]=(x[19]-0)/(46.6000-0)
    x[20]=(x[20]-0)/(37.5000-0)
    x[21]=(x[21]-0)/(988-0)
    x[22]=(x[22]-0)/(31-0)
    x[23]=(x[23]-0)/(9.8000-0)
    x[24]=(x[24]-0)/(18.8000-0)
    x[25]=(x[25]-0)/(27.5000-0)
    x[26]=(x[26]-0)/(49.6000-0)
    x[27]=(x[27]-0)/(440-0)
    x[28]=(x[28]-0)/(71.7000-0)
    x[29]=(x[29]-0)/(32-0)
    x[30]=(x[30]-0)/(250-0)
    x[31]=(x[31]-0)/(440-0)
    x[32]=(x[32]-0)/(1760-0)
    x[33]=(x[33]-0)/(2322-0)
    x[34]=(x[34]-14)/(100-14)
    x[35]=(x[35]-0)/(1-0)
    x[36]=(x[36]-(-1))/(1-(-1))
    x[37]=(x[37]-(-1))/(1-(-1))
    x[38]=(x[38]-(-7000))/(23.99-(-7000))
    x[39]=(x[39]-1)/(336-1)
    df1 = pd.DataFrame(data=x,
                       index=np.array(range(0, 40)),
                       columns=np.array(range(0, 1)))
    df2 = df1.as_matrix()
    dt.iloc[1, :] = df2[:, -1]

    y_pred = load_model.predict(dt)
    y_pred=y_pred[1]
    score = 1 - random.randint(0,10)/100#np.exp(-l_exp_bx)
    #label = score > 0.45

    return score, y_pred

def load_sepsis_model():
    load_model = pickle.load(open('Physio17.dat', 'rb'))
    return load_model
